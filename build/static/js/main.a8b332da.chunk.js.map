{"version":3,"sources":["components/elevator.js","App.js","reportWebVitals.js","index.js"],"names":["Elevator","props","useState","destination","setDestination","position","setPosition","place_state","setPlaceState","move_sense","setMoveSense","elevator","button_nav","i","push","class","className","unshift","onClick","e","event","ctr","timeout","setInterval","setTimeout","clearInterval","alert","moveElevator","disabled","nbFloor","style","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kNAmDe,SAASA,EAASC,GAS7B,IARA,IADoC,EAGEC,mBAAS,GAHX,mBAG7BC,EAH6B,KAGhBC,EAHgB,OAIJF,mBAAS,GAJL,mBAI7BG,EAJ6B,KAInBC,EAJmB,OAKCJ,mBAJpB,GADmB,mBAK7BK,EAL6B,KAKhBC,EALgB,OAMDN,mBAAS,MANR,mBAM7BO,EAN6B,KAMjBC,EANiB,KAO9BC,EAAW,GACXC,EAAa,GARiB,WAS5BC,GACJF,EAASG,KACL,qBAAKC,MAAK,eAAUF,GAApB,SACI,sBAAKG,UAAU,QAAf,UACI,sBAAMA,UAXX,IAWuBP,GAAqBI,GAAKR,EAAa,yBAXpD,IAWgFI,GAAuBI,GAAKR,EAAa,4BAA8B,cAC5J,qBAAKW,UAAYH,IAAMR,EAAY,MAAQ,WAIvDO,EAAWK,QACP,wBAAQD,UAAS,iBAAYH,GAAKK,QAAS,SAACC,GAAD,OAnEvD,SAAsBC,EAAOP,EAAIR,EAAUC,EAAaE,EAAeE,EAAcN,GAGjF,GAFAA,EAAeS,GAEZA,EAAIR,EAAU,CACbK,EAAa,GACbF,EAAc,GACd,IAAIa,EAAMhB,EAQNiB,EAAUC,aAAY,aACpBF,EACFf,EAAYe,KACb,KACJG,YAAW,WACPC,cAAcH,GACdd,EAAc,GACdgB,YAAW,kBAAMhB,EAAc,KAAI,OACtB,KAAZH,EAASQ,SACV,GAAIA,EAAIR,EAAU,CACrBG,EAAc,GACdE,EAAa,GACb,IAAIW,EAAMhB,EAOPiB,EAAUC,aAAY,aACnBF,EACFf,EAAYe,KACd,KACHG,YAAW,WACNC,cAAcH,GACdd,EAAc,GACdgB,YAAW,kBAAMhB,EAAc,KAAI,OACxB,KAAZK,EAAER,SAGLqB,MAAM,2CAuBgDC,CAAaR,EAAGN,EAAGR,EAAUC,EAAaE,EAAeE,EAAcN,IAAiBwB,SAlBtG,IAkBiHrB,EAArJ,SACKM,MAXLA,EAAIZ,EAAM4B,QAAShB,EAAI,EAAGA,IAAM,EAAhCA,GAgBR,OACI,qCACI,qBAAKG,UAAU,aAAf,SA1BS,IA2BLT,EAA2B,WA3BK,IA2BQA,EAA6B,iBA3BxB,IA2B2CA,EAA0B,UAAY,KAElI,uBAAMS,UAAU,cAAhB,2BAA6Cb,KAC7C,sBAAKa,UAAU,WAAf,UACI,sBAAMA,UA/B0B,IA+BfT,EAA6B,eAAiB,WAAYuB,MAAO,CAACzB,SAAU,SAA7F,SAAwGA,IAExG,qBAAKU,MAAM,QAAX,SACKJ,OAIT,qBAAKK,UAAU,UAAf,SACKJ,OCxCFmB,MArCf,WAkBE,OACE,mCACE,cAAC/B,EAAD,CAAU6B,QAAS,OCtBVG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCAdQ,IAASC,OAEP,cAAC,IAAD,UACE,cAAC,EAAD,MAGDC,SAASC,eAAe,SAM3BZ,M","file":"static/js/main.a8b332da.chunk.js","sourcesContent":["import react, {useState} from 'react';\r\nimport '../styles/elevator.css';\r\n\r\nfunction moveElevator(event, i,  position, setPosition, setPlaceState, setMoveSense, setDestination) {\r\n    setDestination(i)\r\n    // console.log(i, position, (i > position ? \"on monte\": \"on descend\"))\r\n    if(i < position) {\r\n        setMoveSense(5)\r\n        setPlaceState(2)\r\n        let ctr = position\r\n        // for(ctr ; ctr > i; ctr--) {\r\n        //     setTimeout(function(j) {\r\n        //         console.log( j)\r\n        //         setPosition(ctr-1)\r\n                \r\n        //     }(ctr), 1000)\r\n        // }\r\n        let timeout = setInterval(() => {\r\n            --ctr\r\n            setPosition(ctr)\r\n        }, 1000)\r\n       setTimeout(() => {\r\n           clearInterval(timeout)\r\n           setPlaceState(3)\r\n           setTimeout(() => setPlaceState(0), 2000)\r\n        }, (position-i)*1000)\r\n    } else if (i > position) {\r\n        setPlaceState(2)\r\n        setMoveSense(4)\r\n        let ctr = position\r\n        // for(ctr; ctr < i; ctr++) {\r\n        //     setTimeout(function(j) {\r\n        //         console.log(j)\r\n        //         setPosition(ctr+1)\r\n        //     }(ctr), 1000)\r\n        // }\r\n       let timeout = setInterval(() => {\r\n            ++ctr\r\n            setPosition(ctr)\r\n       }, 1000)\r\n       setTimeout(() => {\r\n            clearInterval(timeout)\r\n            setPlaceState(3)\r\n            setTimeout(() => setPlaceState(0), 2000)\r\n       }, (i-position)*1000)\r\n        \r\n    } else {    \r\n        alert(\"veuillez indiquer une autre destination\")\r\n    }\r\n}\r\n\r\nexport default function Elevator(props) {\r\n    const STAND_BY = 0, START = 1, TRAVERSING = 2, ENDS_UP = 3\r\n    const UP = 4, DOWN = 5\r\n    const [destination, setDestination] = useState(0)\r\n    const [position, setPosition] = useState(0)\r\n    const [place_state, setPlaceState] = useState(STAND_BY) // might be stand by, start, traversing, ends up\r\n    const [move_sense, setMoveSense] = useState(null)\r\n    const elevator = []\r\n    const button_nav = []\r\n    for(let i = props.nbFloor; i > 0; i--) {\r\n        elevator.push(\r\n            <div class={`up up${i}`}>\r\n                <div className=\"floor\">\r\n                    <span className={(move_sense === UP && i <= position ) ? \"btn-state btn-state-up\" : (move_sense === DOWN && i <= position ) ? 'btn-state  btn-state-down' : 'btn-state'}></span>\r\n                    <div className={(i === position) ? 'box' : ''}></div>\r\n                </div>\r\n            </div>\r\n        )\r\n        button_nav.unshift(\r\n            <button className={`btn_nav${i}`} onClick={(e) => moveElevator(e, i, position, setPosition, setPlaceState, setMoveSense, setDestination)} disabled={(place_state === TRAVERSING)}>\r\n                {i}\r\n            </button>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"statePlace\">{\r\n                place_state === STAND_BY ? 'stand by' : place_state === TRAVERSING ? 'traversing ...' : place_state === ENDS_UP ? 'ends up' : ''\r\n            }</div>\r\n            <span className=\"destination\">destination : {destination}</span>\r\n            <div className=\"building\">\r\n                <span className={place_state === TRAVERSING ? 'curent-c-trv' : 'curent-c'} style={{position: 'fixed'}}>{position}</span>\r\n\r\n                <div class=\"tower\">\r\n                    {elevator}\r\n                </div>\r\n                \r\n            </div>\r\n            <div className=\"btn_nav\">\r\n                {button_nav}\r\n            </div>\r\n        </>\r\n    )\r\n}","// import logo from './logo.svg'\r\n// import './App.css'\r\n// import {Route} from 'react-router-dom'\r\n// import Header from './components/header'\r\n// import AppForm from './components/appform'\r\n// import ModalCust from './components/blocs/modalCust'\r\n// import AccordCust from './components/blocs/accordionCust'\r\n// import Body2 from './components/body2'\r\nimport Elevator from './components/elevator'\r\n// import MyLoggedcomponents from './components/myLoggedcomponents'\r\n// import Block2 from './components/block2'and\r\n\r\n// functionnal stateless components\r\n\r\nfunction App() {\r\n  // const content = [\r\n  //     {\r\n  //       'id': 1,\r\n  //       'title': 'section 1',\r\n  //       'body': 'Et bonjour tout le monde entier c\\'est la section 1'\r\n  //     },\r\n  //     {\r\n  //       'id': 2,\r\n  //       'title': 'section 2',\r\n  //       'body': <Body2/>\r\n  //     },\r\n  //     {\r\n  //       'id': 3,\r\n  //       'title': 'section 3',\r\n  //       'body': <Body2/>\r\n  //     }\r\n  // ]\r\n  return (\r\n    <>\r\n      <Elevator nbFloor={9}/>\r\n      {/* <Header/>\r\n      <ModalCust />\r\n      <AccordCust content={content}/>     \r\n      <Route exact path='/'>\r\n        <AppForm />\r\n      </Route>\r\n      <Route path='/app_form/:name'>\r\n        <AppForm />\r\n      </Route>\r\n      <Route path='/link2'>\r\n        <AppForm />\r\n      </Route> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n  // <React.StrictMode>\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  // </React.StrictMode>,\n   document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}